openapi: 3.0.0
info:
  title: HoloAPI
  version: 1.0.2
#  x-logo:
#    Needs to be a reliable absolute link - this one will change on frontend rebuild.
#    url: https://hololive.jetri.co/add82d630ceb94a7b730fe820c09e73d.png
#    backgroundColor: "#FFFFFF"
  description: |
    # About
    The HoloAPI platform provides compiled and reformatted data related to Virtual Youtubers. This document aims
    to provide all of the information needed for developers to use HoloAPI's resources.
    The whole project and documentation are open-source and are available [here](https://github.com/holofans/holoapi).

    Icons by [Sorekasho](https://twitter.com/KoshmarRin).
    ## Feedback
    Any feedback is greatly appreciated. You can contact us on [Hololive Creators Club](https://discord.gg/xJd9Der)
    in #holofans-api channel. We also collect impressions from twitter
    using [#holotools](https://twitter.com/intent/tweet?text=%23holotools) hashtag.
tags:
  - name: Live
    description: Information on what's currently live.
  - name: Videos
    description: Everything about Hololive's videos.
  - name: Channels
    description: Everything about Hololive's channels.
  - name: Comments
    description: Provides endpoints to search timestamped comments.

servers:
  - url: https://api.holotools.app/v1
    description: Production server
components:
  schemas:
    LiveVideo:
      type: object
      properties:
        id:
          type: integer
        yt_video_key:
          type: string
          nullable: true
        bb_video_id:
          type: string
          nullable: true
        title:
          type: string
        thumbnail:
          type: string
          nullable: true
        live_schedule:
          type: string
          nullable: true
        live_start:
          type: string
          nullable: true
        live_end:
          type: string
          nullable: true
        live_viewers:
          type: string
          nullable: true
        channel:
          $ref: "#/components/schemas/Channel"

    Video:
      allOf:
        - $ref: "#/components/schemas/LiveVideo"
        - type: object
          properties:
            is_uploaded:
              type: boolean
              nullable: true
            duration_secs:
              type: integer
              nullable: true
            is_captioned:
              type: boolean
              nullable: true

    VideoWithComment:
      allOf:
        - $ref: "#/components/schemas/Video"
        - type: object
          properties:
            comments:
              type: array
              items:
                $ref: "#/components/schemas/Comment"

    Channel:
      type: object
      properties:
        id:
          type: integer
          example: 34
        yt_channel_id:
          type: string
          nullable: true
        bb_space_id:
          type: string
          nullable: true
        name:
          type: string
          example: Choco Ch. 癒月ちょこ
        description:
          type: string
          nullable: true
        photo:
          type: string
          example: "https://yt3.ggpht.com/a/AATXAJw7R8J8buhX7Cw1m63vK2jlKFv-9YhFf-TQaA=s800-c-k-c0xffffffff-no-rj-mo"
          nullable: true
        published_at:
          type: string
          example: 2018-04-25T02:45:48.000Z
        twitter_link:
          type: string
          example: yuzukichococh
          nullable: true

    Comment:
      type: object
      properties:
        comment_key:
          type: string
          description: >
            The YouTube comment ID of the comment.
            You can use this along with the yt_video_key
            to generate a direct link to the comment.
        message:
          type: string
          description: >
            Comment text.

    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message.
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Malformed or invalid parameters.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

paths:
  /live:
    get:
      tags:
        - Live
      summary: Get live, upcoming and ended steams.
      description: Fetches live, upcoming and recently ended streams.
      parameters:
        - name: channel_id
          description: >
            Limit output to a single channel, identified
            by its HoloAPI ID.
          in: query
          required: false
          example: 34
          schema:
            type: integer
        - name: max_upcoming_hours
          description: >
            Sometimes members would set up Free Chat rooms.
            Using this you can constrain how far ahead of now we will return scheduled streams.
          in: query
          example: 48
          schema:
            type: integer
          required: false
        - name: lookback_hours
          description: >
            Control how far back in the past you'd like to receive recently-ended videos
            in the `ended` field.
            Maximum is 12 hours. Unset, we will return 6 hours of recently-ended videos.
            By setting this to 0, the `ended` field will be empty.
          in: query
          example: 6
          schema:
            type: integer
          required: false
        - name: hide_channel_desc
          description: >
            If 1, will hide the channel `description` key in all of the channel objects.
            Default 0. Set this to 1 if the application does not need that data,
            as a bandwidth saving measure. Cannot be used with `channel_simple`.
          in: query
          example: 1
          schema:
            type: integer
          required: false
        - name: channel_simple
          description: >
            0: Displays full channel info as object.
            1: Only returns channel as `yt_channel_key` or `bb_channel_id` string.
            Defaults to 0. Cannot be used with `hide_channel_desc`.
      responses:
        "200":
          description: Returns 3 arrays with live, upcoming and ended streams.
          content:
            application/json:
              schema:
                type: object
                properties:
                  live:
                    description: Currently live streams.
                    type: array
                    items:
                      $ref: "#/components/schemas/LiveVideo"
                  upcoming:
                    description: Upcoming and scheduled streams.
                    type: array
                    items:
                      $ref: "#/components/schemas/LiveVideo"
                  ended:
                    description: Streams that ended in the last 6 hours.
                    type: array
                    items:
                      $ref: "#/components/schemas/LiveVideo"
                  cached:
                    type: boolean
                    description: Whether the response was from cache or not.
        "400":
          $ref: "#/components/responses/BadRequest"

  /channels/:
    get:
      tags:
        - Channels
      summary: Get channels.
      description: Lists all channels. Use combination of limit and offset to add pagination.
      parameters:
        - name: limit
          description: The number of channels to return.
          in: query
          schema:
            type: integer
            default: 25
            maximum: 50
        - name: offset
          description: The number of channels to skip.
          in: query
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          schema:
            type: string
            default: id
          description: Column name to sort by.
        - name: order
          in: query
          schema:
            type: string
            default: asc
            enum: [asc, desc]
          description: Sort order.
        - name: name
          in: query
          schema:
            type: string
          description: Channel name search query.

      responses:
        "200":
          description: Returns list of channels.
          content:
            application/json:
              schema:
                type: object
                properties:
                  channels:
                    type: array
                    description: List of channels
                    items:
                      $ref: "#/components/schemas/Channel"
                  total:
                    type: integer
                    description: Count of total number of channels in this list
                  count:
                    type: integer
                    description: Number of channels fetched
        "400":
          $ref: "#/components/responses/BadRequest"
  /channels/{id}:
    get:
      tags:
        - Channels
      summary: Get one by ID.
      description: Fetches a single channel by its HoloAPI ID.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
          description: HoloAPI record ID of the channel.
      responses:
        "200":
          description: Returns requested channel data.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Channel"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
  /channels/youtube/{yt_channel_id}:
    get:
      tags:
        - Channels
      summary: Get one by YouTube ID.
      description: Fetches a single channel by its YouTube ID.
      parameters:
        - name: yt_channel_id
          required: true
          in: path
          schema:
            type: string
          description: The YouTube ID of the channel
      responses:
        "200":
          description: Returns requested channel data.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Channel"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
  /channels/bilibili/{bb_space_id}:
    get:
      tags:
        - Channels
      summary: Get one by bilibili space ID.
      description: Fetches a single channel by its bilibili space ID.
      parameters:
        - name: bb_space_id
          required: true
          in: path
          schema:
            type: string
          description: The bilibili space ID.
      responses:
        "200":
          description: Returns requested channel data.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Channel"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"

  /videos/:
    get:
      tags:
        - Videos
      summary: Get videos.
      description: |
        Returns a list of videos and streams.
        Accepts query parameters for sorting and filtering.
        Does not include comments.

      parameters:
        - name: limit
          description: The number of videos to return.
          in: query
          schema:
            type: integer
            default: 25
            maximum: 50
        - name: offset
          description: The number of videos to skip.
          in: query
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          description: Column name to sort by.
          schema:
            type: string
            default: published_at
        - name: order
          description: Sort order.
          in: query
          schema:
            type: string
            default: desc
            enum: [asc, desc]
        - name: title
          description: Video title search query.
          in: query
          example: かわ余
          schema:
            type: string
        - name: start_date
          description: >
            Date string, preferably in ISO-8601 format.
            Cuts off all videos below this date.
          in: query
          example: "2020-04-25"
          schema:
            type: string
        - name: end_date
          description: >
            Date string, preferably in ISO-8601 format.
            Cuts off all videos above this date.
          in: query
          example: "2020-04-26"
          schema:
            type: string
        - name: status
          description: Status of video to fetch.
          in: query
          schema:
            type: string
            enum: [new, live, upcoming, past, missing]
        - name: is_uploaded
          description: >
            Set to 1 to only return uploaded videos, otherwise
            returns both streams and videos.
          in: query
          example: 1
          schema:
            type: integer
            default: 0
            enum: [0, 1]
        - name: is_captioned
          description: Set to 1 to return only videos with CC.
          in: query
          example: 1
          schema:
            type: integer
            default: 0
            enum: [0, 1]

      responses:
        "200":
          description: Returns filtered list of videos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  videos:
                    type: array
                    description: List of videos, there are no comments here.
                    items:
                      $ref: "#/components/schemas/Video"
                  total:
                    type: integer
                    description: Count of total number of videos
                  count:
                    type: integer
                    description: Number of videos fetched
        "400":
          $ref: "#/components/responses/BadRequest"
  /videos/{id}:
    get:
      tags:
        - Videos
      summary: Get one by ID.
      description: Fetches a single video by its HoloAPI ID.
      parameters:
        - name: id
          required: true
          description: HoloAPI record ID of the video.
          in: path
          example: 34
          schema:
            type: integer
        - name: with_comments
          description: Set to 1 to include comments in the response.
          in: query
          example: 1
          schema:
            type: integer
            default: 0
            enum: [0, 1]
      responses:
        "200":
          description: Returns requested video data.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/VideoWithComment"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
  /videos/youtube/{yt_video_key}:
    get:
      tags:
        - Videos
      summary: Get one by YouTube ID.
      description: Fetches a single video by its YouTube ID.
      parameters:
        - name: yt_video_key
          required: true
          in: path
          description: The YouTube ID of the video.
          example: dQw4w9WgXcQ
          schema:
            type: string
        - name: with_comments
          description: Set to 1 to include comments in the response.
          in: query
          example: 1
          schema:
            type: integer
            default: 0
            enum: [0, 1]
      responses:
        "200":
          description: Returns requested video data.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/VideoWithComment"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
  /videos/bilibili/{bb_video_id}:
    get:
      tags:
        - Videos
      summary: Get one by bilibili ID.
      description: Fetches a single video by its bilibili ID.
      parameters:
        - name: bb_video_id
          required: true
          in: path
          description: The bilibili video ID of the video.
#          example: av90339804
          schema:
            type: string
      responses:
        "200":
          description: Returns requested video data.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Video"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"

  /comments/search:
    get:
      tags:
        - Comments
      summary: Search comments.
      description: Query search comments by keyword.
      parameters:
        - name: q
          description: >
            Query to search. This parameter will be sanitized and returned
            back to you, since all the comment strings in the db have been sanitized.
            There are no full width alphanumerics or half width kana characters.
          in: query
          required: true
          schema:
            type: string
            example: Kimi no Shiranai
        - name: limit
          description: The number of videos to return.
          in: query
          schema:
            type: integer
            default: 25
            maximum: 50
        - name: offset
          description: The number of videos to skip.
          in: query
          schema:
            type: integer
            default: 0
        - name: channel_id
          description: >
            A numerical ID obtained from the /channels endpoint
            that uniquely identifies the channel on this platform.
            Does not support youtube/bilibili ID.
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Returns search result like a list of videos with comments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  videos:
                    type: array
                    description: >
                      List of videos, along with channel and matched comments.
                    items:
                      $ref: "#/components/schemas/VideoWithComment"
                  count:
                    type: integer
                    description: Count of total number of videos.
                  cached:
                    type: boolean
                    description: Whether the response was from cache or not.
                  query:
                    type: string
                    description: >
                      A post-sanitized query text. This query is what
                      was used to match comments text.
        "400":
          $ref: "#/components/responses/BadRequest"
